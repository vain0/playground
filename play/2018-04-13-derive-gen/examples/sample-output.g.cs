/// <auto-generated />

using System;
using System.Collections.Generic;

namespace JohnDoe.AwesomeApp
{
    public sealed partial class Person
    {
        public readonly string Name;
        public readonly int Age;

        public Person(string name, int age)
        {
            Name = name;
            Age = age;
        }

        public override bool Equals(object obj)
        {
            return Equals(obj as Person);
        }

        public bool Equals(Person other)
        {
            return Name == other.Name
                && Age == other.Age;
        }

        public override int GetHashCode()
        {
            return EqualityComparer<string>.Default.GetHashCode(Name) ^ EqualityComparer<int>.Default.GetHashCode(Age);
        }

        public static bool operator ==(Person l, Person r)
        {
            return l.Equals(r);
        }

        public static bool operator !=(Person l, Person r)
        {
            return !(l == r);
        }
    }

    public partial struct PersonId
    {
        public readonly long Value;

        public PersonId(long value)
        {
            Value = value;
        }

        public override bool Equals(object obj)
        {
            return obj is PersonId && Equals((PersonId)obj);
        }

        public bool Equals(PersonId other)
        {
            return Value == other.Value;
        }

        public override int GetHashCode()
        {
            return EqualityComparer<long>.Default.GetHashCode(Value);
        }

        public static bool operator ==(PersonId l, PersonId r)
        {
            return l.Equals(r);
        }

        public static bool operator !=(PersonId l, PersonId r)
        {
            return !(l == r);
        }
    }
}
