---- ---- ---- ----
// int
            1
---- ---- ---- ----
root:
    atom:
        INT("1")
---- ---- ---- ----
// ident
            answer
---- ---- ---- ----
root:
    atom:
        ID("answer")
---- ---- ---- ----
// semi
            1; 2; 3
---- ---- ---- ----
root:
    semi:
        atom:
            INT("1")
        ';'(";")
        semi:
            atom:
                INT("2")
            ';'(";")
            atom:
                INT("3")
---- ---- ---- ----
// eq
            0 == 1
---- ---- ---- ----
root:
    cmp:
        atom:
            INT("0")
        '='("=")
        '='("=")
        atom:
            INT("1")
---- ---- ---- ----
// add + mul
            2 + 3 * 4
---- ---- ---- ----
root:
    add:
        atom:
            INT("2")
        '+'("+")
        mul:
            atom:
                INT("3")
            '*'("*")
            atom:
                INT("4")
---- ---- ---- ----
// call
            f(x)
---- ---- ---- ----
root:
    suffix:
        atom:
            ID("f")
        '('("(")
        atom:
            ID("x")
        ')'(")")
---- ---- ---- ----
// add + mul + call
            f(x) + g(y) * h(z)
---- ---- ---- ----
root:
    add:
        suffix:
            atom:
                ID("f")
            '('("(")
            atom:
                ID("x")
            ')'(")")
        '+'("+")
        mul:
            suffix:
                atom:
                    ID("g")
                '('("(")
                atom:
                    ID("y")
                ')'(")")
            '*'("*")
            suffix:
                atom:
                    ID("h")
                '('("(")
                atom:
                    ID("z")
                ')'(")")
---- ---- ---- ----
// call call
            f(x)(y)
---- ---- ---- ----
root:
    suffix:
        suffix:
            atom:
                ID("f")
            '('("(")
            atom:
                ID("x")
            ')'(")")
        '('("(")
        atom:
            ID("y")
        ')'(")")
---- ---- ---- ----
// call + index
            f(x)[y](z)
---- ---- ---- ----
root:
    suffix:
        suffix:
            suffix:
                atom:
                    ID("f")
                '('("(")
                atom:
                    ID("x")
                ')'(")")
            '['("[")
            atom:
                ID("y")
            ']'("]")
        '('("(")
        atom:
            ID("z")
        ')'(")")
---- ---- ---- ----
// block
            {
                1; 2
            }
---- ---- ---- ----
root:
    block:
        '{'("{")
        semi:
            atom:
                INT("1")
            ';'(";")
            atom:
                INT("2")
        '}'("}")
---- ---- ---- ----
// if
            if true {}
            if false {}
---- ---- ---- ----
root:
    semi:
        if_expr:
            IF("if")
            atom:
                ID("true")
            block:
                '{'("{")
                semi:
                '}'("}")
        if_expr:
            IF("if")
            atom:
                ID("false")
            block:
                '{'("{")
                semi:
                '}'("}")
---- ---- ---- ----
// if-else
            if ok {
                0
            } else {
                1
            }
---- ---- ---- ----
root:
    if_expr:
        IF("if")
        atom:
            ID("ok")
        block:
            '{'("{")
            atom:
                INT("0")
            '}'("}")
        ELSE("else")
        block:
            '{'("{")
            atom:
                INT("1")
            '}'("}")
---- ---- ---- ----
// else-if
            if x == 1 {
                1
            } else if x == 2 {
                2
            } else if x == 3 {
                3
            } else {
                4
            }
---- ---- ---- ----
root:
    if_expr:
        IF("if")
        cmp:
            atom:
                ID("x")
            '='("=")
            '='("=")
            atom:
                INT("1")
        block:
            '{'("{")
            atom:
                INT("1")
            '}'("}")
        ELSE("else")
        if_expr:
            IF("if")
            cmp:
                atom:
                    ID("x")
                '='("=")
                '='("=")
                atom:
                    INT("2")
            block:
                '{'("{")
                atom:
                    INT("2")
                '}'("}")
            ELSE("else")
            if_expr:
                IF("if")
                cmp:
                    atom:
                        ID("x")
                    '='("=")
                    '='("=")
                    atom:
                        INT("3")
                block:
                    '{'("{")
                    atom:
                        INT("3")
                    '}'("}")
                ELSE("else")
                block:
                    '{'("{")
                    atom:
                        INT("4")
                    '}'("}")
---- ---- ---- ----

            x <- 0;
            if { x } == { 0 } {
                x <- {
                    if x == 0 {
                        1
                    } else {
                        0
                    }
                }
            }
            x <- if x == 1 {
                2
            } else {
                0
            }
---- ---- ---- ----
root:
    semi:
        expr:
            ID("x")
            '<'("<")
            '-'("-")
            atom:
                INT("0")
        ';'(";")
        semi:
            if_expr:
                IF("if")
                cmp:
                    block:
                        '{'("{")
                        atom:
                            ID("x")
                        '}'("}")
                    '='("=")
                    '='("=")
                    block:
                        '{'("{")
                        atom:
                            INT("0")
                        '}'("}")
                block:
                    '{'("{")
                    expr:
                        ID("x")
                        '<'("<")
                        '-'("-")
                        block:
                            '{'("{")
                            if_expr:
                                IF("if")
                                cmp:
                                    atom:
                                        ID("x")
                                    '='("=")
                                    '='("=")
                                    atom:
                                        INT("0")
                                block:
                                    '{'("{")
                                    atom:
                                        INT("1")
                                    '}'("}")
                                ELSE("else")
                                block:
                                    '{'("{")
                                    atom:
                                        INT("0")
                                    '}'("}")
                            '}'("}")
                    '}'("}")
            expr:
                ID("x")
                '<'("<")
                '-'("-")
                if_expr:
                    IF("if")
                    cmp:
                        atom:
                            ID("x")
                        '='("=")
                        '='("=")
                        atom:
                            INT("1")
                    block:
                        '{'("{")
                        atom:
                            INT("2")
                        '}'("}")
                    ELSE("else")
                    block:
                        '{'("{")
                        atom:
                            INT("0")
                        '}'("}")
