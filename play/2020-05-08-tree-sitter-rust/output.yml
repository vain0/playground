# See grammar.json for the grammar definition.
# See input.txt for the source code.
- source_file:  # 1:1..33:1
  - let_decl_open:  # 1:1..1:10
    - "let"  # 1:1..1:4
    - "x"  # 1:5..1:6
    - "="  # 1:7..1:8
    - "a"  # 1:9..1:10
  - ";"  # 1:10..1:11
  - let_decl_open:  # 2:1..2:10
    - "let"  # 2:1..2:4
    - "y"  # 2:5..2:6
    - "="  # 2:7..2:8
    - "b"  # 2:9..2:10
  - ";"  # 2:10..2:11
  - let_decl_closed:  # 4:1..7:2
    - "let"  # 4:1..4:4
    - "block_init_1"  # 4:5..4:17
    - "="  # 4:18..4:19
    - block:  # 4:20..7:2
      - "{"  # 4:20..4:21
      - let_decl_open:  # 5:5..5:14
        - "let"  # 5:5..5:8
        - "z"  # 5:9..5:10
        - "="  # 5:11..5:12
        - "c"  # 5:13..5:14
      - ";"  # 5:14..5:15
      - "z"  # 6:5..6:6
      - "}"  # 7:1..7:2
  - let_decl_closed:  # 9:1..12:2
    - "let"  # 9:1..9:4
    - "block_init_2"  # 9:5..9:17
    - "="  # 9:18..9:19
    - block:  # 9:20..12:2
      - "{"  # 9:20..9:21
      - let_decl_open:  # 10:5..10:14
        - "let"  # 10:5..10:8
        - "w"  # 10:9..10:10
        - "="  # 10:11..10:12
        - "d"  # 10:13..10:14
      - ";"  # 10:14..10:15
      - "w"  # 11:5..11:6
      - "}"  # 12:1..12:2
  - let_decl_closed:  # 14:1..18:2
    - "let"  # 14:1..14:4
    - "match_init"  # 14:5..14:15
    - "="  # 14:16..14:17
    - match_expr:  # 14:18..18:2
      - "match"  # 14:18..14:23
      - "k"  # 14:24..14:25
      - "{"  # 14:26..14:27
      - arm_closed:  # 15:5..15:20
        - "p"  # 15:5..15:6
        - "=>"  # 15:7..15:9
        - match_expr:  # 15:10..15:20
          - "match"  # 15:10..15:15
          - "q"  # 15:16..15:17
          - "{"  # 15:18..15:19
          - "}"  # 15:19..15:20
      - arm_open:  # 16:5..16:11
        - "r"  # 16:5..16:6
        - "=>"  # 16:7..16:9
        - "r"  # 16:10..16:11
      - ","  # 16:11..16:12
      - arm_open:  # 17:5..17:11
        - "_"  # 17:5..17:6
        - "=>"  # 17:7..17:9
        - "_"  # 17:10..17:11
      - "}"  # 18:1..18:2
  - block:  # 20:1..22:19
    - "{"  # 20:1..20:2
    - let_decl_open:  # 21:5..21:19
      - "let"  # 21:5..21:8
      - "f"  # 21:9..21:10
      - "="  # 21:11..21:12
      - fn_expr_open:  # 21:13..21:19
        - "fn"  # 21:13..21:15
        - "("  # 21:15..21:16
        - ")"  # 21:16..21:17
        - "d"  # 21:18..21:19
    - ";"  # 21:19..21:20
    - let_decl_open:  # 22:5..22:19
      - "let"  # 22:5..22:8
      - "g"  # 22:9..22:10
      - "="  # 22:11..22:12
      - fn_expr_open:  # 22:13..22:19
        - "fn"  # 22:13..22:15
        - "("  # 22:15..22:16
        - ")"  # 22:16..22:17
        - "f"  # 22:18..22:19
    - ""  # 22:19..22:19
  - let_decl_closed:  # 23:5..26:6
    - "let"  # 23:5..23:8
    - "h"  # 23:9..23:10
    - "="  # 23:11..23:12
    - fn_expr_closed:  # 23:13..26:6
      - "fn"  # 23:13..23:15
      - "("  # 23:15..23:16
      - ")"  # 23:16..23:17
      - "->"  # 23:18..23:20
      - "i32"  # 23:21..23:24
      - block:  # 23:25..26:6
        - "{"  # 23:25..23:26
        - "zero"  # 24:9..24:13
        - ";"  # 24:13..24:14
        - "zero"  # 25:9..25:13
        - "}"  # 26:5..26:6
  - let_decl_open:  # 28:5..28:14
    - "let"  # 28:5..28:8
    - "a"  # 28:9..28:10
    - "="  # 28:11..28:12
    - "b"  # 28:13..28:14
  - ERROR:  # 29:5..29:6
    - "c"  # 29:5..29:6
  - ";"  # 29:6..29:7
  - "d"  # 31:5..31:6
  - ERROR:  # 32:1..32:2
    - "}"  # 32:1..32:2
